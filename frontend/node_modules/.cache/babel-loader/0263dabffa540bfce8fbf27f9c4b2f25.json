{"ast":null,"code":"var _jsxFileName = \"/Users/martiolojimenez/Desktop/React/solana-wallet/frontend/src/App.js\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  Keypair,\n  sendAndConfirmTransaction,\n  clusterApiUrl,\n  Transaction,\n  SystemProgram,\n  Connection\n} = require(\"@solana/web3.js\");\n\nlet fromKeypair = Keypair.generate();\nlet toKeypair = Keypair.generate();\nconst fromKeypairPublic = fromKeypair === null || fromKeypair === void 0 ? void 0 : fromKeypair.publicKey.toString();\nconst fromKeypairSecret = JSON.stringify(Array.from(fromKeypair.secretKey));\nconst toKeypairPublic = toKeypair === null || toKeypair === void 0 ? void 0 : toKeypair.publicKey.toString();\nconst toKeypairSecret = JSON.stringify(Array.from(toKeypair.secretKey));\nlet transaction = new Transaction();\nlet connection = new Connection(clusterApiUrl('devnet'));\n\nfunction App() {\n  transaction.add(SystemProgram.transfer({\n    fromPubkey: fromKeypair.publicKey,\n    toPubkey: toKeypair.publicKey,\n    lamports: 1\n  }));\n  console.log(\"####------LLAVE PUBLICA ENVIA--------######\");\n  console.log(fromKeypairPublic);\n  console.log(\"####-----LLAVE PRIVADA ENVIA-----#########\");\n  console.log(fromKeypairSecret);\n  console.log(\"####------LLAVE PUBLICA RECIBE--------######\");\n  console.log(toKeypairPublic);\n  console.log(\"####-----LLAVE PRIVADA RECIBE-----#########\");\n  console.log(toKeypairSecret);\n  console.log(\"########----TRANSACCION----###########\");\n  console.log(transaction);\n  console.log(\"########----CONEXION----###########\");\n  console.log(connection);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"PublicKey Del que Envia:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: fromKeypairPublic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"SecretKey Del que envia:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: fromKeypair.secretKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"PublicKey Del que Recibe:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: toKeypairPublic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"SecretKey Del que Recibe:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: toKeypairSecret\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: transactionByme,\n      children: \"Hacer Transaccion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\n\nfunction transactionByme() {\n  sendAndConfirmTransaction(connection, transaction, [fromKeypair]);\n  console.log(transaction);\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/martiolojimenez/Desktop/React/solana-wallet/frontend/src/App.js"],"names":["Keypair","sendAndConfirmTransaction","clusterApiUrl","Transaction","SystemProgram","Connection","require","fromKeypair","generate","toKeypair","fromKeypairPublic","publicKey","toString","fromKeypairSecret","JSON","stringify","Array","from","secretKey","toKeypairPublic","toKeypairSecret","transaction","connection","App","add","transfer","fromPubkey","toPubkey","lamports","console","log","transactionByme"],"mappings":"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","sourcesContent":["import './App.css';\nconst {Keypair, sendAndConfirmTransaction, clusterApiUrl, Transaction, SystemProgram, Connection} = require(\"@solana/web3.js\");\n\nlet fromKeypair = Keypair.generate();\nlet toKeypair = Keypair.generate();\nconst fromKeypairPublic = fromKeypair?.publicKey.toString();\nconst fromKeypairSecret = JSON.stringify(Array.from(fromKeypair.secretKey));\nconst toKeypairPublic = toKeypair?.publicKey.toString();\nconst toKeypairSecret = JSON.stringify(Array.from(toKeypair.secretKey));\nlet transaction = new Transaction();\nlet connection = new Connection(clusterApiUrl('devnet'));\n\n\nfunction App() {\n  transaction.add(\n    SystemProgram.transfer({\n      fromPubkey: fromKeypair.publicKey,\n      toPubkey: toKeypair.publicKey,\n      lamports: 1\n    })\n  );\n\n  console.log(\"####------LLAVE PUBLICA ENVIA--------######\");\n  console.log(fromKeypairPublic);\n  console.log(\"####-----LLAVE PRIVADA ENVIA-----#########\");\n  console.log(fromKeypairSecret);\n  console.log(\"####------LLAVE PUBLICA RECIBE--------######\");\n  console.log(toKeypairPublic);\n  console.log(\"####-----LLAVE PRIVADA RECIBE-----#########\");\n  console.log(toKeypairSecret);\n  console.log(\"########----TRANSACCION----###########\");\n  console.log(transaction);\n  console.log(\"########----CONEXION----###########\");\n  console.log(connection);\n\n  return (\n    <>\n      <h3>PublicKey Del que Envia:</h3>\n      <h4>{fromKeypairPublic}</h4>\n      <h3>SecretKey Del que envia:</h3>\n      <h4>{fromKeypair.secretKey}</h4>\n      <h3>PublicKey Del que Recibe:</h3>\n      <h4>{toKeypairPublic}</h4>\n      <h3>SecretKey Del que Recibe:</h3>\n      <h4>{toKeypairSecret}</h4>\n      <button onClick={transactionByme}>Hacer Transaccion</button>\n    </>\n  )\n}\n\nfunction transactionByme() {\n  sendAndConfirmTransaction(\n    connection,\n    transaction,\n    [fromKeypair]\n  );\n  console.log(transaction);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}